#!/bin/bash

set -e
shopt -s extglob
shopt -s nullglob

if [ -r ./mk.livecd.conf ] && [ -r ./mk.livecd.functions ]; then
    source ./mk.livecd.conf
    source ./mk.livecd.functions
else
    echo E: Missing mk.livecd.conf or mk.livecd.functions
    exit 1
fi

echo I: cleaning earlier build
trap "clean_mounts; exit 0" EXIT
clean_mounts
rm -rf binary binary.iso chroot config livecd-*.iso .stage
# remove cached Packages/Release files from previous run
# (cache only valid within the same run)
rm -rf cache/indices_bootstrap

echo I: configuring build
lh_config

# prepare the config files for live helper
(
  cd config.vyatta
  cp -alf binary_local-includes chroot_apt chroot_local-hooks \
    chroot_local-includes chroot_sources chroot_local-packageslists \
    chroot_local-patches \
    ../config/
 
  if ! eval "$VYATTA_DEV_BUILD"; then
    # not dev build => use testing.
    sed -i 's/\/unstable /\/testing /' ../config/chroot_sources/vyatta.chroot
    if ! eval "$VYATTA_COMMUNITY_BUILD" \
       && ! eval "$VYATTA_SUPPORTED_BUILD"; then
      # legacy autobuild. don't actually add the repo.
      sed -i 's/vyatta-dev\/kenwood\/testing/debian-kenwood/;
              s/ kenwood / lenny /;' \
        ../config/chroot_sources/vyatta.chroot
    fi
  fi
)

# set up "vyatta-kernel" packages list according to flavor
kplist="config/chroot_local-packageslists/vyatta-kernel.$LH_LINUX_FLAVOURS"
if [ -f "$kplist" ]; then
  # list exists. set it up.
  mv -f $kplist config/chroot_local-packageslists/vyatta-kernel
fi

# set up version template
if eval "$VYATTA_COMMUNITY_BUILD"; then
  # community build
  cp -f templates/community/version .
elif eval "$VYATTA_SUPPORTED_BUILD"; then
  # supported build
  cp -f templates/supported/version .
fi

# set up dev build version string
export VYATTA_DEV_VERSION=$(get_dev_version)

# copy the locally-built packages for installation
# (but only those on one of the lists)
for p in ../pkgs/*.deb; do
  found=false
  pp=${p%%_*}
  pkg=${pp#../pkgs/}
  for l in $LH_PACKAGES_LISTS; do
    if egrep -q -e "^$pkg$" config/chroot_local-packageslists/$l; then
      found=true
      break
    fi
  done
  if eval "$found"; then
    cp -lf $p config/chroot_local-packages/
  fi
done

echo I: building bootstrap
if ! lh_bootstrap; then
  echo E: bootstrap build failed
  exit 1
fi

# fake out /dev/random to be /dev/urandom for chroot step
(rm -f chroot/dev/random && mknod -m 666 chroot/dev/random c 1 9) || true

echo I: building chroot
if ! lh_chroot; then
  echo E: chroot build failed
  exit 1
fi

# restore /dev/random
(rm -f chroot/dev/random && mknod -m 666 chroot/dev/random c 1 8) || true

# remove backup files for ISO
rm -f chroot/etc/*.vyatta-save chroot/etc/*/*.vyatta-save

## Clean up ssh keys.  System should regen keys locally
rm -f chroot/etc/ssh/ssh_host*

# make version package (twice to get itself into the pkg list)
echo I: making version package
mk_version_package ; mk_version_package

# add config version string to default config file
chroot chroot sh -c \
  '/opt/vyatta/sbin/vyatta_current_conf_ver.pl \
   >> /opt/vyatta/etc/config.boot.default'

rm -rf chroot/root/{.rnd,.gnupg,.aptitude,.debtags}

## restore apt/preferences for binary build
cp -f config.vyatta/chroot_apt/preferences chroot/etc/apt
sed -i '/BEGIN SHADOW ENTRY/,/END SHADOW ENTRY/{d}' chroot/etc/apt/preferences

# build the XenSource partition image
if eval "$create_xensourcevm"; then
  vyatta-xensource-partition-image || exit 1
  exit 0
fi

echo I: building binary
if ! lh_binary ; then
  echo E: binary build failed
  exit 1
fi

ln -nsf binary.iso livecd-"$BUILDID".iso

echo I: Done

# Local Variables:
# mode: shell-script
# sh-indentation: 4
# End:
